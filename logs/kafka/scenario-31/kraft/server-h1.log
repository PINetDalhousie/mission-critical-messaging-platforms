<h1>: [2023-02-26 20:29:19,446] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
<h1>: [2023-02-26 20:29:19,751] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
<h1>: [2023-02-26 20:29:20,036] INFO [LogLoader partition=__cluster_metadata-0, dir=/home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
<h1>: [2023-02-26 20:29:20,037] INFO [LogLoader partition=__cluster_metadata-0, dir=/home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1] Reloading from producer snapshot and rebuilding producer state from offset 0 (kafka.log.UnifiedLog$)
<h1>: [2023-02-26 20:29:20,038] INFO [LogLoader partition=__cluster_metadata-0, dir=/home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1] Producer state recovery took 1ms for snapshot load and 0ms for segment recovery from offset 0 (kafka.log.UnifiedLog$)
<h1>: [2023-02-26 20:29:20,187] INFO [raft-expiration-reaper]: Starting (kafka.raft.TimingWheelExpirationService$ExpiredOperationReaper)
<h1>: [2023-02-26 20:29:20,463] INFO [RaftManager nodeId=1] Completed transition to Unattached(epoch=0, voters=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], electionTimeoutMs=11979) (org.apache.kafka.raft.QuorumState)
<h1>: [2023-02-26 20:29:20,493] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
<h1>: [2023-02-26 20:29:20,500] INFO [kafka-raft-outbound-request-thread]: Starting (kafka.raft.RaftSendThread)
<h1>: [2023-02-26 20:29:20,500] INFO [kafka-raft-io-thread]: Starting (kafka.raft.KafkaRaftManager$RaftIoThread)
<h1>: [2023-02-26 20:29:20,501] INFO Starting controller (kafka.server.ControllerServer)
<h1>: [2023-02-26 20:29:20,903] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
<h1>: [2023-02-26 20:29:20,910] INFO Awaiting socket connections on 10.0.0.1:19092. (kafka.network.Acceptor)
<h1>: [2023-02-26 20:29:20,945] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(CONTROLLER) (kafka.network.SocketServer)
<h1>: [2023-02-26 20:29:21,000] INFO [RaftManager nodeId=1] Registered the listener org.apache.kafka.controller.QuorumController$QuorumMetaLogListener@1032034856 (org.apache.kafka.raft.KafkaRaftClient)
<h1>: [2023-02-26 20:29:21,014] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
<h1>: [2023-02-26 20:29:21,015] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
<h1>: [2023-02-26 20:29:21,016] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
<h1>: [2023-02-26 20:29:21,019] INFO [ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
<h1>: [2023-02-26 20:29:21,095] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
<h1>: [2023-02-26 20:29:21,104] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Starting socket server acceptors and processors (kafka.network.SocketServer)
<h1>: [2023-02-26 20:29:21,116] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Started data-plane acceptor and processor(s) for endpoint : ListenerName(CONTROLLER) (kafka.network.SocketServer)
<h1>: [2023-02-26 20:29:21,117] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Started socket server acceptors and processors (kafka.network.SocketServer)
<h1>: [2023-02-26 20:29:21,118] INFO [BrokerServer id=1] Transition from SHUTDOWN to STARTING (kafka.server.BrokerServer)
<h1>: [2023-02-26 20:29:21,119] INFO [BrokerServer id=1] Starting broker (kafka.server.BrokerServer)
<h1>: [2023-02-26 20:29:21,137] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
<h1>: [2023-02-26 20:29:21,138] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
<h1>: [2023-02-26 20:29:21,139] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
<h1>: [2023-02-26 20:29:21,140] INFO [ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
<h1>: [2023-02-26 20:29:21,182] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Starting (kafka.server.BrokerToControllerRequestThread)
<h1>: [2023-02-26 20:29:21,230] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
<h1>: [2023-02-26 20:29:21,230] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
<h1>: [2023-02-26 20:29:21,238] INFO [SocketServer listenerType=BROKER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
<h1>: [2023-02-26 20:29:21,248] INFO [BrokerToControllerChannelManager broker=1 name=alterIsr]: Starting (kafka.server.BrokerToControllerRequestThread)
<h1>: [2023-02-26 20:29:21,265] INFO [ExpirationReaper-1-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
<h1>: [2023-02-26 20:29:21,268] INFO [ExpirationReaper-1-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
<h1>: [2023-02-26 20:29:21,268] INFO [ExpirationReaper-1-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
<h1>: [2023-02-26 20:29:21,269] INFO [ExpirationReaper-1-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
<h1>: [2023-02-26 20:29:21,297] INFO [ExpirationReaper-1-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
<h1>: [2023-02-26 20:29:21,298] INFO [ExpirationReaper-1-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
<h1>: [2023-02-26 20:29:21,353] INFO [RaftManager nodeId=1] Registered the listener kafka.server.metadata.BrokerMetadataListener@1528353188 (org.apache.kafka.raft.KafkaRaftClient)
<h1>: [2023-02-26 20:29:21,368] INFO [BrokerToControllerChannelManager broker=1 name=heartbeat]: Starting (kafka.server.BrokerToControllerRequestThread)
<h1>: [2023-02-26 20:29:21,373] INFO [BrokerLifecycleManager id=1] Incarnation 6rIgwvzsRMObLP09_LWn5A of broker 1 in cluster JmL9ihFRQmSabrNWrYSpjg is now STARTING. (kafka.server.BrokerLifecycleManager)
<h1>: [2023-02-26 20:29:21,396] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
<h1>: [2023-02-26 20:29:32,250] INFO [RaftManager nodeId=1] Completed transition to CandidateState(localId=1, epoch=1, retries=1, electionTimeoutMs=12832) (org.apache.kafka.raft.QuorumState)
<h1>: [2023-02-26 20:29:32,287] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:32,312] INFO [RaftManager nodeId=1] Node 13 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,316] WARN [RaftManager nodeId=1] Connection to node 13 (/10.0.0.13:19104) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,316] INFO [RaftManager nodeId=1] Node 14 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,320] WARN [RaftManager nodeId=1] Connection to node 14 (/10.0.0.14:19105) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,320] INFO [RaftManager nodeId=1] Node 15 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,321] WARN [RaftManager nodeId=1] Connection to node 15 (/10.0.0.15:19106) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,322] INFO [RaftManager nodeId=1] Node 17 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,322] WARN [RaftManager nodeId=1] Connection to node 17 (/10.0.0.17:19108) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,322] INFO [RaftManager nodeId=1] Node 18 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,322] WARN [RaftManager nodeId=1] Connection to node 18 (/10.0.0.18:19109) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,348] INFO [RaftManager nodeId=1] Node 16 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,348] WARN [RaftManager nodeId=1] Connection to node 16 (/10.0.0.16:19107) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,348] INFO [RaftManager nodeId=1] Node 19 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,348] WARN [RaftManager nodeId=1] Connection to node 19 (/10.0.0.19:19110) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,378] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:32,389] INFO [RaftManager nodeId=1] Node 14 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,389] WARN [RaftManager nodeId=1] Connection to node 14 (/10.0.0.14:19105) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,391] INFO [RaftManager nodeId=1] Node 13 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,392] WARN [RaftManager nodeId=1] Connection to node 13 (/10.0.0.13:19104) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,392] INFO [RaftManager nodeId=1] Node 15 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,392] WARN [RaftManager nodeId=1] Connection to node 15 (/10.0.0.15:19106) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,392] INFO [RaftManager nodeId=1] Node 17 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,392] WARN [RaftManager nodeId=1] Connection to node 17 (/10.0.0.17:19108) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,392] INFO [RaftManager nodeId=1] Node 18 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,392] WARN [RaftManager nodeId=1] Connection to node 18 (/10.0.0.18:19109) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,412] INFO [RaftManager nodeId=1] Node 16 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,412] WARN [RaftManager nodeId=1] Connection to node 16 (/10.0.0.16:19107) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,413] INFO [RaftManager nodeId=1] Node 19 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,413] WARN [RaftManager nodeId=1] Connection to node 19 (/10.0.0.19:19110) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,458] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:32,500] INFO [RaftManager nodeId=1] Node 13 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,500] WARN [RaftManager nodeId=1] Connection to node 13 (/10.0.0.13:19104) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,501] INFO [RaftManager nodeId=1] Node 17 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,501] WARN [RaftManager nodeId=1] Connection to node 17 (/10.0.0.17:19108) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,520] INFO [RaftManager nodeId=1] Node 15 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,521] WARN [RaftManager nodeId=1] Connection to node 15 (/10.0.0.15:19106) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,523] INFO [RaftManager nodeId=1] Node 14 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,523] WARN [RaftManager nodeId=1] Connection to node 14 (/10.0.0.14:19105) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,524] INFO [RaftManager nodeId=1] Node 18 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,524] WARN [RaftManager nodeId=1] Connection to node 18 (/10.0.0.18:19109) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,548] INFO [RaftManager nodeId=1] Node 16 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,549] WARN [RaftManager nodeId=1] Connection to node 16 (/10.0.0.16:19107) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,549] INFO [RaftManager nodeId=1] Node 19 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,549] WARN [RaftManager nodeId=1] Connection to node 19 (/10.0.0.19:19110) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,676] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:32,682] INFO [RaftManager nodeId=1] Node 13 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,683] WARN [RaftManager nodeId=1] Connection to node 13 (/10.0.0.13:19104) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,703] INFO [RaftManager nodeId=1] Node 17 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,704] WARN [RaftManager nodeId=1] Connection to node 17 (/10.0.0.17:19108) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,726] INFO [RaftManager nodeId=1] Node 14 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,726] WARN [RaftManager nodeId=1] Connection to node 14 (/10.0.0.14:19105) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,731] INFO [RaftManager nodeId=1] Node 19 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,731] WARN [RaftManager nodeId=1] Connection to node 19 (/10.0.0.19:19110) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,753] INFO [RaftManager nodeId=1] Node 18 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,753] WARN [RaftManager nodeId=1] Connection to node 18 (/10.0.0.18:19109) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,776] INFO [RaftManager nodeId=1] Node 15 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,776] WARN [RaftManager nodeId=1] Connection to node 15 (/10.0.0.15:19106) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,801] INFO [RaftManager nodeId=1] Node 16 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,801] WARN [RaftManager nodeId=1] Connection to node 16 (/10.0.0.16:19107) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:32,841] INFO [RaftManager nodeId=1] Completed transition to Leader(localId=1, epoch=1, epochStartOffset=0, highWatermark=Optional.empty, voterStates={1=ReplicaState(nodeId=1, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=true), 2=ReplicaState(nodeId=2, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 3=ReplicaState(nodeId=3, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 4=ReplicaState(nodeId=4, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 5=ReplicaState(nodeId=5, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 6=ReplicaState(nodeId=6, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 7=ReplicaState(nodeId=7, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 8=ReplicaState(nodeId=8, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 9=ReplicaState(nodeId=9, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 10=ReplicaState(nodeId=10, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 11=ReplicaState(nodeId=11, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 12=ReplicaState(nodeId=12, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 13=ReplicaState(nodeId=13, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 14=ReplicaState(nodeId=14, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 15=ReplicaState(nodeId=15, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 16=ReplicaState(nodeId=16, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 17=ReplicaState(nodeId=17, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 18=ReplicaState(nodeId=18, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 19=ReplicaState(nodeId=19, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false), 20=ReplicaState(nodeId=20, endOffset=Optional.empty, lastFetchTimestamp=OptionalLong.empty, hasAcknowledgedLeader=false)}) (org.apache.kafka.raft.QuorumState)
<h1>: [2023-02-26 20:29:32,844] INFO [Controller 1] Becoming the active controller at epoch 1, committed offset -1 and committed epoch -1. (org.apache.kafka.controller.QuorumController)
<h1>: [2023-02-26 20:29:32,897] INFO [BrokerToControllerChannelManager broker=1 name=alterIsr]: Recorded new controller, from now on will use broker 10.0.0.1:19092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
<h1>: [2023-02-26 20:29:32,918] INFO [BrokerToControllerChannelManager broker=1 name=heartbeat]: Recorded new controller, from now on will use broker 10.0.0.1:19092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
<h1>: [2023-02-26 20:29:32,937] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Recorded new controller, from now on will use broker 10.0.0.1:19092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
<h1>: [2023-02-26 20:29:32,973] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=1, incarnationId=6rIgwvzsRMObLP09_LWn5A, brokerEpoch=0, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.1', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:33,026] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:33,127] INFO [RaftManager nodeId=1] Node 13 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,128] WARN [RaftManager nodeId=1] Connection to node 13 (/10.0.0.13:19104) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,129] INFO [RaftManager nodeId=1] Node 17 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,129] WARN [RaftManager nodeId=1] Connection to node 17 (/10.0.0.17:19108) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,129] INFO [RaftManager nodeId=1] Node 19 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,129] WARN [RaftManager nodeId=1] Connection to node 19 (/10.0.0.19:19110) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,151] INFO [RaftManager nodeId=1] Node 14 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,152] WARN [RaftManager nodeId=1] Connection to node 14 (/10.0.0.14:19105) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,187] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=6, incarnationId=tWJGIuImQuOPSh9jHcvzcQ, brokerEpoch=2, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.6', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:33,188] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=7, incarnationId=O1z5PGXXQRqq0Ox8ftec9w, brokerEpoch=3, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.7', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:33,196] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=12, incarnationId=l7BYBuzYSheQw-kIzb6D2A, brokerEpoch=4, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.12', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:33,198] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=2, incarnationId=muwjgDb5Qvu5EYbOfhl71A, brokerEpoch=5, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.2', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:33,203] INFO [RaftManager nodeId=1] Node 18 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,203] WARN [RaftManager nodeId=1] Connection to node 18 (/10.0.0.18:19109) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,217] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=5, incarnationId=en4z4Pd0RhGZ9fpLM1HXJQ, brokerEpoch=6, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.5', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:33,223] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=3, incarnationId=OLs9mZoTToi95TKnegOEug, brokerEpoch=7, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.3', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:33,232] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=10, incarnationId=w_JJdsbjRIWECHGlzrAvtQ, brokerEpoch=8, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.10', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:33,234] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=8, incarnationId=u0aWgOCAS92KIIb382hzZw, brokerEpoch=9, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.8', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:33,247] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=9, incarnationId=DoHwaS4STcS5kiFGsI8DHg, brokerEpoch=10, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.9', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:33,254] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=4, incarnationId=ysYN0e7DSYyNQOeizVdmXA, brokerEpoch=11, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.4', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:33,279] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=11, incarnationId=vltlAgYgTRioxypHOQ8BSQ, brokerEpoch=12, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.11', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:33,413] INFO [RaftManager nodeId=1] Node 15 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,413] WARN [RaftManager nodeId=1] Connection to node 15 (/10.0.0.15:19106) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,414] INFO [RaftManager nodeId=1] Node 16 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,414] WARN [RaftManager nodeId=1] Connection to node 16 (/10.0.0.16:19107) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,481] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:33,584] INFO [RaftManager nodeId=1] Node 17 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,584] WARN [RaftManager nodeId=1] Connection to node 17 (/10.0.0.17:19108) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,621] INFO [RaftManager nodeId=1] Node 19 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,621] WARN [RaftManager nodeId=1] Connection to node 19 (/10.0.0.19:19110) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,614] INFO [BrokerLifecycleManager id=1] Successfully registered broker 1 with broker epoch 0 (kafka.server.BrokerLifecycleManager)
<h1>: [2023-02-26 20:29:33,661] INFO [RaftManager nodeId=1] Node 13 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,662] WARN [RaftManager nodeId=1] Connection to node 13 (/10.0.0.13:19104) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,671] INFO [BrokerLifecycleManager id=1] The broker has caught up. Transitioning from STARTING to RECOVERY. (kafka.server.BrokerLifecycleManager)
<h1>: [2023-02-26 20:29:33,710] INFO [BrokerMetadataListener id=1] Starting to publish metadata events at offset 12. (kafka.server.metadata.BrokerMetadataListener)
<h1>: [2023-02-26 20:29:33,712] INFO [BrokerLifecycleManager id=1] The broker is in RECOVERY. (kafka.server.BrokerLifecycleManager)
<h1>: [2023-02-26 20:29:33,712] INFO [RaftManager nodeId=1] Node 18 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,712] WARN [RaftManager nodeId=1] Connection to node 18 (/10.0.0.18:19109) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,716] INFO [BrokerMetadataPublisher id=1] Publishing initial metadata at offset OffsetAndEpoch(offset=12, epoch=1). (kafka.server.metadata.BrokerMetadataPublisher)
<h1>: [2023-02-26 20:29:33,717] INFO Loading logs from log dirs ArraySeq(/home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1) (kafka.log.LogManager)
<h1>: [2023-02-26 20:29:33,718] INFO Attempting recovery for all logs in /home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1 since no clean shutdown file was found (kafka.log.LogManager)
<h1>: [2023-02-26 20:29:33,722] INFO Loaded 0 logs in 5ms. (kafka.log.LogManager)
<h1>: [2023-02-26 20:29:33,722] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
<h1>: [2023-02-26 20:29:33,729] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
<h1>: [2023-02-26 20:29:33,735] INFO [RaftManager nodeId=1] Node 14 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,735] WARN [RaftManager nodeId=1] Connection to node 14 (/10.0.0.14:19105) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,878] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
<h1>: [2023-02-26 20:29:33,878] INFO [GroupCoordinator 1]: Starting up. (kafka.coordinator.group.GroupCoordinator)
<h1>: [2023-02-26 20:29:33,881] INFO [GroupCoordinator 1]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
<h1>: [2023-02-26 20:29:33,881] INFO [TransactionCoordinator id=1] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
<h1>: [2023-02-26 20:29:33,894] INFO [TransactionCoordinator id=1] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
<h1>: [2023-02-26 20:29:33,896] INFO [RaftManager nodeId=1] Node 15 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,896] WARN [RaftManager nodeId=1] Connection to node 15 (/10.0.0.15:19106) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:33,898] INFO [Transaction Marker Channel Manager 1]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
<h1>: [2023-02-26 20:29:33,914] INFO KafkaConfig values: 
<h1>: 	advertised.listeners = PLAINTEXT://10.0.0.1:9092
<h1>: 	alter.config.policy.class.name = null
<h1>: 	alter.log.dirs.replication.quota.window.num = 11
<h1>: 	alter.log.dirs.replication.quota.window.size.seconds = 1
<h1>: 	authorizer.class.name = 
<h1>: 	auto.create.topics.enable = true
<h1>: 	auto.leader.rebalance.enable = true
<h1>: 	background.threads = 10
<h1>: 	broker.heartbeat.interval.ms = 2000
<h1>: 	broker.id = 1
<h1>: 	broker.id.generation.enable = true
<h1>: 	broker.rack = null
<h1>: 	broker.session.timeout.ms = 120000
<h1>: 	client.quota.callback.class = null
<h1>: 	compression.type = producer
<h1>: 	connection.failed.authentication.delay.ms = 100
<h1>: 	connections.max.idle.ms = 600000
<h1>: 	connections.max.reauth.ms = 0
<h1>: 	control.plane.listener.name = null
<h1>: 	controlled.shutdown.enable = true
<h1>: 	controlled.shutdown.max.retries = 3
<h1>: 	controlled.shutdown.retry.backoff.ms = 5000
<h1>: 	controller.listener.names = CONTROLLER
<h1>: 	controller.quorum.append.linger.ms = 25
<h1>: 	controller.quorum.election.backoff.max.ms = 10000
<h1>: 	controller.quorum.election.timeout.ms = 10000
<h1>: 	controller.quorum.fetch.timeout.ms = 20000
<h1>: 	controller.quorum.request.timeout.ms = 120000
<h1>: 	controller.quorum.retry.backoff.ms = 20
<h1>: 	controller.quorum.voters = [1@10.0.0.1:19092, 2@10.0.0.2:19093, 3@10.0.0.3:19094, 4@10.0.0.4:19095, 5@10.0.0.5:19096, 6@10.0.0.6:19097, 7@10.0.0.7:19098, 8@10.0.0.8:19099, 9@10.0.0.9:19100, 10@10.0.0.10:19101, 11@10.0.0.11:19102, 12@10.0.0.12:19103, 13@10.0.0.13:19104, 14@10.0.0.14:19105, 15@10.0.0.15:19106, 16@10.0.0.16:19107, 17@10.0.0.17:19108, 18@10.0.0.18:19109, 19@10.0.0.19:19110, 20@10.0.0.20:19111:9093]
<h1>: 	controller.quota.window.num = 11
<h1>: 	controller.quota.window.size.seconds = 1
<h1>: 	controller.socket.timeout.ms = 300000
<h1>: 	create.topic.policy.class.name = null
<h1>: 	default.replication.factor = 1
<h1>: 	delegation.token.expiry.check.interval.ms = 3600000
<h1>: 	delegation.token.expiry.time.ms = 86400000
<h1>: 	delegation.token.master.key = null
<h1>: 	delegation.token.max.lifetime.ms = 604800000
<h1>: 	delegation.token.secret.key = null
<h1>: 	delete.records.purgatory.purge.interval.requests = 1
<h1>: 	delete.topic.enable = true
<h1>: 	fetch.max.bytes = 57671680
<h1>: 	fetch.purgatory.purge.interval.requests = 1000
<h1>: 	group.initial.rebalance.delay.ms = 3000
<h1>: 	group.max.session.timeout.ms = 1800000
<h1>: 	group.max.size = 2147483647
<h1>: 	group.min.session.timeout.ms = 6000
<h1>: 	initial.broker.registration.timeout.ms = 180000
<h1>: 	inter.broker.listener.name = PLAINTEXT
<h1>: 	inter.broker.protocol.version = 3.1-IV0
<h1>: 	kafka.metrics.polling.interval.secs = 10
<h1>: 	kafka.metrics.reporters = []
<h1>: 	leader.imbalance.check.interval.seconds = 300
<h1>: 	leader.imbalance.per.broker.percentage = 10
<h1>: 	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
<h1>: 	listeners = PLAINTEXT://:9092,CONTROLLER://10.0.0.1:19092
<h1>: 	log.cleaner.backoff.ms = 15000
<h1>: 	log.cleaner.dedupe.buffer.size = 134217728
<h1>: 	log.cleaner.delete.retention.ms = 86400000
<h1>: 	log.cleaner.enable = true
<h1>: 	log.cleaner.io.buffer.load.factor = 0.9
<h1>: 	log.cleaner.io.buffer.size = 524288
<h1>: 	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
<h1>: 	log.cleaner.max.compaction.lag.ms = 9223372036854775807
<h1>: 	log.cleaner.min.cleanable.ratio = 0.5
<h1>: 	log.cleaner.min.compaction.lag.ms = 0
<h1>: 	log.cleaner.threads = 1
<h1>: 	log.cleanup.policy = [delete]
<h1>: 	log.dir = /tmp/kafka-logs
<h1>: 	log.dirs = ./kafka-3.1.0/logs/kafka1
<h1>: 	log.flush.interval.messages = 9223372036854775807
<h1>: 	log.flush.interval.ms = null
<h1>: 	log.flush.offset.checkpoint.interval.ms = 60000
<h1>: 	log.flush.scheduler.interval.ms = 9223372036854775807
<h1>: 	log.flush.start.offset.checkpoint.interval.ms = 60000
<h1>: 	log.index.interval.bytes = 4096
<h1>: 	log.index.size.max.bytes = 10485760
<h1>: 	log.message.downconversion.enable = true
<h1>: 	log.message.format.version = 3.0-IV1
<h1>: 	log.message.timestamp.difference.max.ms = 9223372036854775807
<h1>: 	log.message.timestamp.type = CreateTime
<h1>: 	log.preallocate = false
<h1>: 	log.retention.bytes = -1
<h1>: 	log.retention.check.interval.ms = 300000
<h1>: 	log.retention.hours = 168
<h1>: 	log.retention.minutes = null
<h1>: 	log.retention.ms = null
<h1>: 	log.roll.hours = 168
<h1>: 	log.roll.jitter.hours = 0
<h1>: 	log.roll.jitter.ms = null
<h1>: 	log.roll.ms = null
<h1>: 	log.segment.bytes = 1073741824
<h1>: 	log.segment.delete.delay.ms = 60000
<h1>: 	max.connection.creation.rate = 2147483647
<h1>: 	max.connections = 2147483647
<h1>: 	max.connections.per.ip = 2147483647
<h1>: 	max.connections.per.ip.overrides = 
<h1>: 	max.incremental.fetch.session.cache.slots = 1000
<h1>: 	message.max.bytes = 1048588
<h1>: 	metadata.log.dir = null
<h1>: 	metadata.log.max.record.bytes.between.snapshots = 20971520
<h1>: 	metadata.log.segment.bytes = 1073741824
<h1>: 	metadata.log.segment.min.bytes = 8388608
<h1>: 	metadata.log.segment.ms = 604800000
<h1>: 	metadata.max.retention.bytes = -1
<h1>: 	metadata.max.retention.ms = 604800000
<h1>: 	metric.reporters = []
<h1>: 	metrics.num.samples = 2
<h1>: 	metrics.recording.level = INFO
<h1>: 	metrics.sample.window.ms = 30000
<h1>: 	min.insync.replicas = 1
<h1>: 	node.id = 1
<h1>: 	num.io.threads = 8
<h1>: 	num.network.threads = 3
<h1>: 	num.partitions = 1
<h1>: 	num.recovery.threads.per.data.dir = 1
<h1>: 	num.replica.alter.log.dirs.threads = null
<h1>: 	num.replica.fetchers = 1
<h1>: 	offset.metadata.max.bytes = 4096
<h1>: 	offsets.commit.required.acks = -1
<h1>: 	offsets.commit.timeout.ms = 5000
<h1>: 	offsets.load.buffer.size = 5242880
<h1>: 	offsets.retention.check.interval.ms = 600000
<h1>: 	offsets.retention.minutes = 10080
<h1>: 	offsets.topic.compression.codec = 0
<h1>: 	offsets.topic.num.partitions = 50
<h1>: 	offsets.topic.replication.factor = 1
<h1>: 	offsets.topic.segment.bytes = 104857600
<h1>: 	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
<h1>: 	password.encoder.iterations = 4096
<h1>: 	password.encoder.key.length = 128
<h1>: 	password.encoder.keyfactory.algorithm = null
<h1>: 	password.encoder.old.secret = null
<h1>: 	password.encoder.secret = null
<h1>: 	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
<h1>: 	process.roles = [broker, controller]
<h1>: 	producer.purgatory.purge.interval.requests = 1000
<h1>: 	queued.max.request.bytes = -1
<h1>: 	queued.max.requests = 500
<h1>: 	quota.window.num = 11
<h1>: 	quota.window.size.seconds = 1
<h1>: 	remote.log.index.file.cache.total.size.bytes = 1073741824
<h1>: 	remote.log.manager.task.interval.ms = 30000
<h1>: 	remote.log.manager.task.retry.backoff.max.ms = 30000
<h1>: 	remote.log.manager.task.retry.backoff.ms = 500
<h1>: 	remote.log.manager.task.retry.jitter = 0.2
<h1>: 	remote.log.manager.thread.pool.size = 10
<h1>: 	remote.log.metadata.manager.class.name = null
<h1>: 	remote.log.metadata.manager.class.path = null
<h1>: 	remote.log.metadata.manager.impl.prefix = null
<h1>: 	remote.log.metadata.manager.listener.name = null
<h1>: 	remote.log.reader.max.pending.tasks = 100
<h1>: 	remote.log.reader.threads = 10
<h1>: 	remote.log.storage.manager.class.name = null
<h1>: 	remote.log.storage.manager.class.path = null
<h1>: 	remote.log.storage.manager.impl.prefix = null
<h1>: 	remote.log.storage.system.enable = false
<h1>: 	replica.fetch.backoff.ms = 1000
<h1>: 	replica.fetch.max.bytes = 1048576
<h1>: 	replica.fetch.min.bytes = 1
<h1>: 	replica.fetch.response.max.bytes = 10485760
<h1>: 	replica.fetch.wait.max.ms = 500
<h1>: 	replica.high.watermark.checkpoint.interval.ms = 5000
<h1>: 	replica.lag.time.max.ms = 30000
<h1>: 	replica.selector.class = null
<h1>: 	replica.socket.receive.buffer.bytes = 65536
<h1>: 	replica.socket.timeout.ms = 30000
<h1>: 	replication.quota.window.num = 11
<h1>: 	replication.quota.window.size.seconds = 1
<h1>: 	request.timeout.ms = 300000
<h1>: 	reserved.broker.max.id = 1000
<h1>: 	sasl.client.callback.handler.class = null
<h1>: 	sasl.enabled.mechanisms = [GSSAPI]
<h1>: 	sasl.jaas.config = null
<h1>: 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
<h1>: 	sasl.kerberos.min.time.before.relogin = 60000
<h1>: 	sasl.kerberos.principal.to.local.rules = [DEFAULT]
<h1>: 	sasl.kerberos.service.name = null
<h1>: 	sasl.kerberos.ticket.renew.jitter = 0.05
<h1>: 	sasl.kerberos.ticket.renew.window.factor = 0.8
<h1>: 	sasl.login.callback.handler.class = null
<h1>: 	sasl.login.class = null
<h1>: 	sasl.login.connect.timeout.ms = null
<h1>: 	sasl.login.read.timeout.ms = null
<h1>: 	sasl.login.refresh.buffer.seconds = 300
<h1>: 	sasl.login.refresh.min.period.seconds = 60
<h1>: 	sasl.login.refresh.window.factor = 0.8
<h1>: 	sasl.login.refresh.window.jitter = 0.05
<h1>: 	sasl.login.retry.backoff.max.ms = 10000
<h1>: 	sasl.login.retry.backoff.ms = 100
<h1>: 	sasl.mechanism.controller.protocol = GSSAPI
<h1>: 	sasl.mechanism.inter.broker.protocol = GSSAPI
<h1>: 	sasl.oauthbearer.clock.skew.seconds = 30
<h1>: 	sasl.oauthbearer.expected.audience = null
<h1>: 	sasl.oauthbearer.expected.issuer = null
<h1>: 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
<h1>: 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
<h1>: 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
<h1>: 	sasl.oauthbearer.jwks.endpoint.url = null
<h1>: 	sasl.oauthbearer.scope.claim.name = scope
<h1>: 	sasl.oauthbearer.sub.claim.name = sub
<h1>: 	sasl.oauthbearer.token.endpoint.url = null
<h1>: 	sasl.server.callback.handler.class = null
<h1>: 	security.inter.broker.protocol = PLAINTEXT
<h1>: 	security.providers = null
<h1>: 	socket.connection.setup.timeout.max.ms = 300000
<h1>: 	socket.connection.setup.timeout.ms = 120000
<h1>: 	socket.receive.buffer.bytes = 102400
<h1>: 	socket.request.max.bytes = 104857600
<h1>: 	socket.send.buffer.bytes = 102400
<h1>: 	ssl.cipher.suites = []
<h1>: 	ssl.client.auth = none
<h1>: 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
<h1>: 	ssl.endpoint.identification.algorithm = https
<h1>: 	ssl.engine.factory.class = null
<h1>: 	ssl.key.password = null
<h1>: 	ssl.keymanager.algorithm = SunX509
<h1>: 	ssl.keystore.certificate.chain = null
<h1>: 	ssl.keystore.key = null
<h1>: 	ssl.keystore.location = null
<h1>: 	ssl.keystore.password = null
<h1>: 	ssl.keystore.type = JKS
<h1>: 	ssl.principal.mapping.rules = DEFAULT
<h1>: 	ssl.protocol = TLSv1.3
<h1>: 	ssl.provider = null
<h1>: 	ssl.secure.random.implementation = null
<h1>: 	ssl.trustmanager.algorithm = PKIX
<h1>: 	ssl.truststore.certificates = null
<h1>: 	ssl.truststore.location = null
<h1>: 	ssl.truststore.password = null
<h1>: 	ssl.truststore.type = JKS
<h1>: 	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
<h1>: 	transaction.max.timeout.ms = 900000
<h1>: 	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
<h1>: 	transaction.state.log.load.buffer.size = 5242880
<h1>: 	transaction.state.log.min.isr = 1
<h1>: 	transaction.state.log.num.partitions = 50
<h1>: 	transaction.state.log.replication.factor = 1
<h1>: 	transaction.state.log.segment.bytes = 104857600
<h1>: 	transactional.id.expiration.ms = 604800000
<h1>: 	unclean.leader.election.enable = false
<h1>: 	zookeeper.clientCnxnSocket = null
<h1>: 	zookeeper.connect = null
<h1>: 	zookeeper.connection.timeout.ms = null
<h1>: 	zookeeper.max.in.flight.requests = 10
<h1>: 	zookeeper.session.timeout.ms = 18000
<h1>: 	zookeeper.set.acl = false
<h1>: 	zookeeper.ssl.cipher.suites = null
<h1>: 	zookeeper.ssl.client.enable = false
<h1>: 	zookeeper.ssl.crl.enable = false
<h1>: 	zookeeper.ssl.enabled.protocols = null
<h1>: 	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
<h1>: 	zookeeper.ssl.keystore.location = null
<h1>: 	zookeeper.ssl.keystore.password = null
<h1>: 	zookeeper.ssl.keystore.type = null
<h1>: 	zookeeper.ssl.ocsp.enable = false
<h1>: 	zookeeper.ssl.protocol = TLSv1.2
<h1>: 	zookeeper.ssl.truststore.location = null
<h1>: 	zookeeper.ssl.truststore.password = null
<h1>: 	zookeeper.ssl.truststore.type = null
<h1>: 	zookeeper.sync.time.ms = 2000
<h1>:  (kafka.server.KafkaConfig)
<h1>: [2023-02-26 20:29:33,919] INFO [SocketServer listenerType=BROKER, nodeId=1] Starting socket server acceptors and processors (kafka.network.SocketServer)
<h1>: [2023-02-26 20:29:33,924] INFO [SocketServer listenerType=BROKER, nodeId=1] Started data-plane acceptor and processor(s) for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
<h1>: [2023-02-26 20:29:33,924] INFO [SocketServer listenerType=BROKER, nodeId=1] Started socket server acceptors and processors (kafka.network.SocketServer)
<h1>: [2023-02-26 20:29:33,925] INFO [BrokerServer id=1] Transition from STARTING to STARTED (kafka.server.BrokerServer)
<h1>: [2023-02-26 20:29:33,926] INFO Kafka version: 3.1.0 (org.apache.kafka.common.utils.AppInfoParser)
<h1>: [2023-02-26 20:29:33,926] INFO Kafka commitId: unknown (org.apache.kafka.common.utils.AppInfoParser)
<h1>: [2023-02-26 20:29:33,926] INFO Kafka startTimeMs: 1677457773925 (org.apache.kafka.common.utils.AppInfoParser)
<h1>: [2023-02-26 20:29:33,926] INFO [Controller 1] The request from broker 1 to unfence has been granted because it has caught up with the last committed metadata offset 12. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:33,930] INFO Kafka Server started (kafka.server.KafkaRaftServer)
<h1>: [2023-02-26 20:29:33,932] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=1, epoch=0) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:34,036] INFO [RaftManager nodeId=1] Node 17 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,037] WARN [RaftManager nodeId=1] Connection to node 17 (/10.0.0.17:19108) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,037] INFO [RaftManager nodeId=1] Node 16 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,037] WARN [RaftManager nodeId=1] Connection to node 16 (/10.0.0.16:19107) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,059] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:34,104] INFO [BrokerLifecycleManager id=1] The broker has been unfenced. Transitioning from RECOVERY to RUNNING. (kafka.server.BrokerLifecycleManager)
<h1>: [2023-02-26 20:29:34,241] INFO [RaftManager nodeId=1] Node 18 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,241] WARN [RaftManager nodeId=1] Connection to node 18 (/10.0.0.18:19109) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,241] INFO [RaftManager nodeId=1] Node 19 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,241] WARN [RaftManager nodeId=1] Connection to node 19 (/10.0.0.19:19110) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,337] INFO [RaftManager nodeId=1] Node 14 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,337] WARN [RaftManager nodeId=1] Connection to node 14 (/10.0.0.14:19105) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,422] INFO [RaftManager nodeId=1] Node 15 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,422] WARN [RaftManager nodeId=1] Connection to node 15 (/10.0.0.15:19106) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,480] INFO [RaftManager nodeId=1] Node 16 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,480] WARN [RaftManager nodeId=1] Connection to node 16 (/10.0.0.16:19107) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,572] INFO [RaftManager nodeId=1] Node 17 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,572] WARN [RaftManager nodeId=1] Connection to node 17 (/10.0.0.17:19108) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,618] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=13, incarnationId=ASDOl6kTROCykY11g3mL_A, brokerEpoch=14, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.13', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:34,719] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:34,727] INFO [RaftManager nodeId=1] Node 18 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,727] WARN [RaftManager nodeId=1] Connection to node 18 (/10.0.0.18:19109) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,836] INFO [RaftManager nodeId=1] Node 19 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,836] WARN [RaftManager nodeId=1] Connection to node 19 (/10.0.0.19:19110) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,928] INFO [RaftManager nodeId=1] Node 15 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,928] WARN [RaftManager nodeId=1] Connection to node 15 (/10.0.0.15:19106) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,956] INFO [RaftManager nodeId=1] Node 14 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:34,956] WARN [RaftManager nodeId=1] Connection to node 14 (/10.0.0.14:19105) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:35,022] INFO [RaftManager nodeId=1] Node 16 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:35,022] WARN [RaftManager nodeId=1] Connection to node 16 (/10.0.0.16:19107) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:35,094] INFO [RaftManager nodeId=1] Node 17 disconnected. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:35,094] WARN [RaftManager nodeId=1] Connection to node 17 (/10.0.0.17:19108) could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)
<h1>: [2023-02-26 20:29:35,150] INFO [Controller 1] The request from broker 13 to unfence has been granted because it has caught up with the last committed metadata offset 14. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:38,892] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=13, epoch=14) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:38,892] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:38,892] INFO [Controller 1] The request from broker 3 to unfence has been granted because it has caught up with the last committed metadata offset 14. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:38,893] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=3, epoch=7) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:38,893] INFO [Controller 1] The request from broker 10 to unfence has been granted because it has caught up with the last committed metadata offset 14. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:38,893] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=10, epoch=8) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:38,893] INFO [Controller 1] The request from broker 12 to unfence has been granted because it has caught up with the last committed metadata offset 14. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:38,894] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=12, epoch=4) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:38,894] INFO [Controller 1] The request from broker 6 to unfence has been granted because it has caught up with the last committed metadata offset 14. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:38,894] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=6, epoch=2) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:39,172] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=15, incarnationId=rimofCmQTV-dFYcy3Xgu1g, brokerEpoch=20, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.15', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:39,180] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=17, incarnationId=3wYalzwcT9iEiHhlAZ1NlA, brokerEpoch=21, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.17', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:39,201] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=18, incarnationId=t-_qwTjGR92U33fDvvL8kQ, brokerEpoch=22, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.18', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:39,218] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=14, incarnationId=r3uoR0x-Tnq2UoG47-pYnA, brokerEpoch=23, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.14', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:39,230] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=16, incarnationId=hjwCXEURRIaUSK9mevc7GA, brokerEpoch=24, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.16', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:39,385] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:39,811] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=19, incarnationId=xwO9ZQBTRxqwhQWRK5nRmQ, brokerEpoch=25, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.19', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:39,940] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:40,557] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:40,767] INFO [Controller 1] The request from broker 19 to unfence has been granted because it has caught up with the last committed metadata offset 25. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:40,767] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=19, epoch=25) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:40,824] INFO [Controller 1] The request from broker 4 to unfence has been granted because it has caught up with the last committed metadata offset 25. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:40,824] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=4, epoch=11) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:40,852] INFO [Controller 1] The request from broker 7 to unfence has been granted because it has caught up with the last committed metadata offset 25. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:40,853] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=7, epoch=3) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:40,853] INFO [Controller 1] The request from broker 2 to unfence has been granted because it has caught up with the last committed metadata offset 25. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:40,853] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=2, epoch=5) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:40,870] INFO [Controller 1] The request from broker 5 to unfence has been granted because it has caught up with the last committed metadata offset 25. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:40,870] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=5, epoch=6) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:40,873] INFO [Controller 1] The request from broker 8 to unfence has been granted because it has caught up with the last committed metadata offset 25. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:40,874] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=8, epoch=9) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:40,876] INFO [Controller 1] The request from broker 11 to unfence has been granted because it has caught up with the last committed metadata offset 25. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:40,876] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=11, epoch=12) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:40,882] INFO [Controller 1] The request from broker 9 to unfence has been granted because it has caught up with the last committed metadata offset 25. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:40,882] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=9, epoch=10) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:41,122] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:41,689] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:42,045] INFO [Controller 1] The request from broker 17 to unfence has been granted because it has caught up with the last committed metadata offset 33. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:42,045] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=17, epoch=21) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:42,093] INFO [Controller 1] The request from broker 14 to unfence has been granted because it has caught up with the last committed metadata offset 33. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:42,094] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=14, epoch=23) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:42,099] INFO [Controller 1] The request from broker 16 to unfence has been granted because it has caught up with the last committed metadata offset 33. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:42,099] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=16, epoch=24) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:42,103] INFO [Controller 1] The request from broker 15 to unfence has been granted because it has caught up with the last committed metadata offset 33. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:42,103] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=15, epoch=20) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:42,110] INFO [Controller 1] The request from broker 18 to unfence has been granted because it has caught up with the last committed metadata offset 33. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:42,111] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=18, epoch=22) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:42,276] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:42,892] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:43,478] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:44,039] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:44,482] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:45,069] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:45,503] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:45,990] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:46,444] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:47,024] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:47,445] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:47,867] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:48,338] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:48,856] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:49,369] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:49,827] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:50,433] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:50,794] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=20, assignments=[], configs=[]): INVALID_REPLICATION_FACTOR (Unable to replicate the partition 20 time(s): The target replication factor of 20 cannot be reached because only 19 broker(s) are registered.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:50,914] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:51,388] WARN [RaftManager nodeId=1] Error connecting to node 10.0.0.20:19111:9093 (id: 20 rack: null) (org.apache.kafka.clients.NetworkClient)
<h1>: java.net.UnknownHostException: 10.0.0.20:19111: invalid IPv6 address
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1355)
<h1>: 	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
<h1>: 	at org.apache.kafka.clients.DefaultHostResolver.resolve(DefaultHostResolver.java:27)
<h1>: 	at org.apache.kafka.clients.ClientUtils.resolve(ClientUtils.java:110)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.currentAddress(ClusterConnectionStates.java:511)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState.access$200(ClusterConnectionStates.java:468)
<h1>: 	at org.apache.kafka.clients.ClusterConnectionStates.currentAddress(ClusterConnectionStates.java:173)
<h1>: 	at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:984)
<h1>: 	at org.apache.kafka.clients.NetworkClient.ready(NetworkClient.java:301)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1(InterBrokerSendThread.scala:103)
<h1>: 	at kafka.common.InterBrokerSendThread.$anonfun$sendRequests$1$adapted(InterBrokerSendThread.scala:99)
<h1>: 	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
<h1>: 	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
<h1>: 	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
<h1>: 	at kafka.common.InterBrokerSendThread.sendRequests(InterBrokerSendThread.scala:99)
<h1>: 	at kafka.common.InterBrokerSendThread.pollOnce(InterBrokerSendThread.scala:73)
<h1>: 	at kafka.common.InterBrokerSendThread.doWork(InterBrokerSendThread.scala:94)
<h1>: 	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
<h1>: [2023-02-26 20:29:51,719] INFO [RaftManager nodeId=1] Vote request VoteRequestData(clusterId='JmL9ihFRQmSabrNWrYSpjg', topics=[TopicData(topicName='__cluster_metadata', partitions=[PartitionData(partitionIndex=0, candidateEpoch=1, candidateId=20, lastOffsetEpoch=0, lastOffset=0)])]) with epoch 1 is rejected (org.apache.kafka.raft.KafkaRaftClient)
<h1>: [2023-02-26 20:29:51,886] INFO [Controller 1] Registered new broker: RegisterBrokerRecord(brokerId=20, incarnationId=dDGA3CuHTBykH0pzUbhwmA, brokerEpoch=39, endPoints=[BrokerEndpoint(name='PLAINTEXT', host='10.0.0.20', port=9092, securityProtocol=0)], features=[], rack=null, fenced=true) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:52,670] INFO [Controller 1] The request from broker 20 to unfence has been granted because it has caught up with the last committed metadata offset 39. (org.apache.kafka.controller.BrokerHeartbeatManager)
<h1>: [2023-02-26 20:29:52,671] INFO [Controller 1] Unfenced broker: UnfenceBrokerRecord(id=20, epoch=39) (org.apache.kafka.controller.ClusterControlManager)
<h1>: [2023-02-26 20:29:52,709] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-1', numPartitions=1, replicationFactor=20, assignments=[], configs=[]): SUCCESS (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:52,710] INFO [Controller 1] Created topic topic-1 with topic ID dVvmnTbzTJCZyuFN1c_dog. (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:52,710] INFO [Controller 1] Created partition topic-1-0 with topic ID dVvmnTbzTJCZyuFN1c_dog and PartitionRegistration(replicas=[14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], isr=[14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], removingReplicas=[], addingReplicas=[], leader=14, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:52,961] INFO [LogLoader partition=topic-1-0, dir=/home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
<h1>: [2023-02-26 20:29:52,965] INFO Created log for partition topic-1-0 in /home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1/topic-1-0 with properties {} (kafka.log.LogManager)
<h1>: [2023-02-26 20:29:52,967] INFO [Partition topic-1-0 broker=1] No checkpointed highwatermark is found for partition topic-1-0 (kafka.cluster.Partition)
<h1>: [2023-02-26 20:29:52,968] INFO [Partition topic-1-0 broker=1] Log loaded for partition topic-1-0 with initial high watermark 0 (kafka.cluster.Partition)
<h1>: [2023-02-26 20:29:52,969] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(topic-1-0) (kafka.server.ReplicaFetcherManager)
<h1>: [2023-02-26 20:29:52,989] INFO [ReplicaFetcher replicaId=1, leaderId=14, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
<h1>: [2023-02-26 20:29:52,992] INFO [ReplicaFetcherManager on broker 1] Added fetcher to broker 14 for partitions HashMap(topic-1-0 -> InitialFetchState(Some(dVvmnTbzTJCZyuFN1c_dog),BrokerEndPoint(id=14, host=10.0.0.14:9092),0,0)) (kafka.server.ReplicaFetcherManager)
<h1>: [2023-02-26 20:29:52,995] INFO [ReplicaFetcher replicaId=1, leaderId=14, fetcherId=0] Truncating partition topic-1-0 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
<h1>: [2023-02-26 20:29:52,997] INFO [UnifiedLog partition=topic-1-0, dir=/home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
<h1>: [2023-02-26 20:29:53,048] WARN [ReplicaFetcher replicaId=1, leaderId=14, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition topic-1-0. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
<h1>: [2023-02-26 20:29:53,714] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): SUCCESS (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,719] INFO [Controller 1] ConfigResource(type=TOPIC, name='__consumer_offsets'): set configuration compression.type to producer (org.apache.kafka.controller.ConfigurationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] ConfigResource(type=TOPIC, name='__consumer_offsets'): set configuration cleanup.policy to compact (org.apache.kafka.controller.ConfigurationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] ConfigResource(type=TOPIC, name='__consumer_offsets'): set configuration segment.bytes to 104857600 (org.apache.kafka.controller.ConfigurationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created topic __consumer_offsets with topic ID gs35a5FWTyyJLPclII7hIA. (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created partition __consumer_offsets-0 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[4], isr=[4], removingReplicas=[], addingReplicas=[], leader=4, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created partition __consumer_offsets-1 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[5], isr=[5], removingReplicas=[], addingReplicas=[], leader=5, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created partition __consumer_offsets-2 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[6], isr=[6], removingReplicas=[], addingReplicas=[], leader=6, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created partition __consumer_offsets-3 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[7], isr=[7], removingReplicas=[], addingReplicas=[], leader=7, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created partition __consumer_offsets-4 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[8], isr=[8], removingReplicas=[], addingReplicas=[], leader=8, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created partition __consumer_offsets-5 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[9], isr=[9], removingReplicas=[], addingReplicas=[], leader=9, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created partition __consumer_offsets-6 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[10], isr=[10], removingReplicas=[], addingReplicas=[], leader=10, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created partition __consumer_offsets-7 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[11], isr=[11], removingReplicas=[], addingReplicas=[], leader=11, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created partition __consumer_offsets-8 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[12], isr=[12], removingReplicas=[], addingReplicas=[], leader=12, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created partition __consumer_offsets-9 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[13], isr=[13], removingReplicas=[], addingReplicas=[], leader=13, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created partition __consumer_offsets-10 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[14], isr=[14], removingReplicas=[], addingReplicas=[], leader=14, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,721] INFO [Controller 1] Created partition __consumer_offsets-11 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[15], isr=[15], removingReplicas=[], addingReplicas=[], leader=15, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-12 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[16], isr=[16], removingReplicas=[], addingReplicas=[], leader=16, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-13 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[17], isr=[17], removingReplicas=[], addingReplicas=[], leader=17, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-14 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[18], isr=[18], removingReplicas=[], addingReplicas=[], leader=18, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-15 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[19], isr=[19], removingReplicas=[], addingReplicas=[], leader=19, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-16 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[20], isr=[20], removingReplicas=[], addingReplicas=[], leader=20, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-17 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[1], isr=[1], removingReplicas=[], addingReplicas=[], leader=1, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-18 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[2], isr=[2], removingReplicas=[], addingReplicas=[], leader=2, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-19 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[3], isr=[3], removingReplicas=[], addingReplicas=[], leader=3, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-20 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[7], isr=[7], removingReplicas=[], addingReplicas=[], leader=7, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-21 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[10], isr=[10], removingReplicas=[], addingReplicas=[], leader=10, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-22 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[20], isr=[20], removingReplicas=[], addingReplicas=[], leader=20, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-23 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[1], isr=[1], removingReplicas=[], addingReplicas=[], leader=1, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-24 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[4], isr=[4], removingReplicas=[], addingReplicas=[], leader=4, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-25 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[9], isr=[9], removingReplicas=[], addingReplicas=[], leader=9, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-26 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[18], isr=[18], removingReplicas=[], addingReplicas=[], leader=18, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-27 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[16], isr=[16], removingReplicas=[], addingReplicas=[], leader=16, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-28 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[6], isr=[6], removingReplicas=[], addingReplicas=[], leader=6, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-29 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[12], isr=[12], removingReplicas=[], addingReplicas=[], leader=12, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,722] INFO [Controller 1] Created partition __consumer_offsets-30 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[14], isr=[14], removingReplicas=[], addingReplicas=[], leader=14, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,727] INFO [Controller 1] Created partition __consumer_offsets-31 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[8], isr=[8], removingReplicas=[], addingReplicas=[], leader=8, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,727] INFO [Controller 1] Created partition __consumer_offsets-32 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[5], isr=[5], removingReplicas=[], addingReplicas=[], leader=5, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,727] INFO [Controller 1] Created partition __consumer_offsets-33 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[19], isr=[19], removingReplicas=[], addingReplicas=[], leader=19, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,728] INFO [Controller 1] Created partition __consumer_offsets-34 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[17], isr=[17], removingReplicas=[], addingReplicas=[], leader=17, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,728] INFO [Controller 1] Created partition __consumer_offsets-35 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[11], isr=[11], removingReplicas=[], addingReplicas=[], leader=11, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,729] INFO [Controller 1] Created partition __consumer_offsets-36 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[3], isr=[3], removingReplicas=[], addingReplicas=[], leader=3, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,729] INFO [Controller 1] Created partition __consumer_offsets-37 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[2], isr=[2], removingReplicas=[], addingReplicas=[], leader=2, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,729] INFO [Controller 1] Created partition __consumer_offsets-38 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[15], isr=[15], removingReplicas=[], addingReplicas=[], leader=15, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,729] INFO [Controller 1] Created partition __consumer_offsets-39 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[13], isr=[13], removingReplicas=[], addingReplicas=[], leader=13, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,730] INFO [Controller 1] Created partition __consumer_offsets-40 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[13], isr=[13], removingReplicas=[], addingReplicas=[], leader=13, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,731] INFO [Controller 1] Created partition __consumer_offsets-41 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[8], isr=[8], removingReplicas=[], addingReplicas=[], leader=8, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,731] INFO [Controller 1] Created partition __consumer_offsets-42 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[12], isr=[12], removingReplicas=[], addingReplicas=[], leader=12, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,732] INFO [Controller 1] Created partition __consumer_offsets-43 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[6], isr=[6], removingReplicas=[], addingReplicas=[], leader=6, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,732] INFO [Controller 1] Created partition __consumer_offsets-44 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[10], isr=[10], removingReplicas=[], addingReplicas=[], leader=10, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,732] INFO [Controller 1] Created partition __consumer_offsets-45 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[3], isr=[3], removingReplicas=[], addingReplicas=[], leader=3, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,732] INFO [Controller 1] Created partition __consumer_offsets-46 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[17], isr=[17], removingReplicas=[], addingReplicas=[], leader=17, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,732] INFO [Controller 1] Created partition __consumer_offsets-47 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[7], isr=[7], removingReplicas=[], addingReplicas=[], leader=7, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,732] INFO [Controller 1] Created partition __consumer_offsets-48 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[11], isr=[11], removingReplicas=[], addingReplicas=[], leader=11, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,732] INFO [Controller 1] Created partition __consumer_offsets-49 with topic ID gs35a5FWTyyJLPclII7hIA and PartitionRegistration(replicas=[1], isr=[1], removingReplicas=[], addingReplicas=[], leader=1, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,733] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,733] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,733] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,734] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,767] INFO Sent auto-creation request for Set(__consumer_offsets) to the active controller. (kafka.server.DefaultAutoTopicCreationManager)
<h1>: [2023-02-26 20:29:53,769] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,774] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,799] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,826] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,829] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,845] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,874] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-23, __consumer_offsets-17, __consumer_offsets-49) (kafka.server.ReplicaFetcherManager)
<h1>: [2023-02-26 20:29:53,884] INFO [LogLoader partition=__consumer_offsets-23, dir=/home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
<h1>: [2023-02-26 20:29:53,885] INFO Created log for partition __consumer_offsets-23 in /home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1/__consumer_offsets-23 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
<h1>: [2023-02-26 20:29:53,888] INFO [Partition __consumer_offsets-23 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-23 (kafka.cluster.Partition)
<h1>: [2023-02-26 20:29:53,888] INFO [Partition __consumer_offsets-23 broker=1] Log loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Partition)
<h1>: [2023-02-26 20:29:53,918] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,920] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,928] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,986] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:53,990] INFO [LogLoader partition=__consumer_offsets-17, dir=/home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
<h1>: [2023-02-26 20:29:53,990] INFO Created log for partition __consumer_offsets-17 in /home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1/__consumer_offsets-17 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
<h1>: [2023-02-26 20:29:53,991] INFO [Partition __consumer_offsets-17 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-17 (kafka.cluster.Partition)
<h1>: [2023-02-26 20:29:53,991] INFO [Partition __consumer_offsets-17 broker=1] Log loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Partition)
<h1>: [2023-02-26 20:29:54,037] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,071] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,073] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,082] INFO [LogLoader partition=__consumer_offsets-49, dir=/home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
<h1>: [2023-02-26 20:29:54,083] INFO Created log for partition __consumer_offsets-49 in /home/visitor/neves/amnis-data-sync/./kafka-3.1.0/logs/kafka1/__consumer_offsets-49 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
<h1>: [2023-02-26 20:29:54,084] INFO [Partition __consumer_offsets-49 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-49 (kafka.cluster.Partition)
<h1>: [2023-02-26 20:29:54,084] INFO [Partition __consumer_offsets-49 broker=1] Log loaded for partition __consumer_offsets-49 with initial high watermark 0 (kafka.cluster.Partition)
<h1>: [2023-02-26 20:29:54,091] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,108] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,117] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,140] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,142] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,143] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,144] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,144] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,165] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,173] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,174] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,180] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,182] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 23 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
<h1>: [2023-02-26 20:29:54,183] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-23 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
<h1>: [2023-02-26 20:29:54,184] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 17 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
<h1>: [2023-02-26 20:29:54,184] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-17 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
<h1>: [2023-02-26 20:29:54,184] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 49 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
<h1>: [2023-02-26 20:29:54,184] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-49 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
<h1>: [2023-02-26 20:29:54,190] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-23 in 6 milliseconds for epoch 0, of which 2 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
<h1>: [2023-02-26 20:29:54,190] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-17 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
<h1>: [2023-02-26 20:29:54,190] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-49 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
<h1>: [2023-02-26 20:29:54,193] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,195] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,227] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,233] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,238] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,241] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,243] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,245] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,251] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,251] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,276] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,283] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,283] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,284] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,339] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,348] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,354] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,358] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,359] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,361] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='__consumer_offsets', numPartitions=50, replicationFactor=1, assignments=[], configs=[CreateableTopicConfig(name='compression.type', value='producer'), CreateableTopicConfig(name='cleanup.policy', value='compact'), CreateableTopicConfig(name='segment.bytes', value='104857600')]): TOPIC_ALREADY_EXISTS (Topic '__consumer_offsets' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:29:54,447] INFO [GroupCoordinator 1]: Dynamic Member with unknown member id joins group group-1 in Empty state. Created a new member id kafka-python-2.0.2-5a4a0cb6-eea7-4ffe-8b60-cd1c29fed214 for this member and add to the group. (kafka.coordinator.group.GroupCoordinator)
<h1>: [2023-02-26 20:29:54,477] INFO [GroupCoordinator 1]: Preparing to rebalance group group-1 in state PreparingRebalance with old generation 0 (__consumer_offsets-49) (reason: Adding new member kafka-python-2.0.2-5a4a0cb6-eea7-4ffe-8b60-cd1c29fed214 with group instance id None) (kafka.coordinator.group.GroupCoordinator)
<h1>: [2023-02-26 20:29:57,499] INFO [GroupCoordinator 1]: Stabilized group group-1 generation 1 (__consumer_offsets-49) with 1 members (kafka.coordinator.group.GroupCoordinator)
<h1>: [2023-02-26 20:29:57,514] INFO [GroupCoordinator 1]: Assignment received from leader kafka-python-2.0.2-5a4a0cb6-eea7-4ffe-8b60-cd1c29fed214 for group group-1 for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
<h1>: [2023-02-26 20:31:59,111] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): SUCCESS (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,112] INFO [Controller 1] Created topic topic-0 with topic ID pdlBKgLLRDWnsdzKZEnY7A. (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,112] INFO [Controller 1] Created partition topic-0-0 with topic ID pdlBKgLLRDWnsdzKZEnY7A and PartitionRegistration(replicas=[7], isr=[7], removingReplicas=[], addingReplicas=[], leader=7, leaderEpoch=0, partitionEpoch=0). (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,126] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,126] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,131] INFO Sent auto-creation request for Set(topic-0) to the active controller. (kafka.server.DefaultAutoTopicCreationManager)
<h1>: [2023-02-26 20:31:59,132] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,136] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,161] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,163] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,163] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,258] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,258] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,263] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,279] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,447] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,456] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,462] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,470] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,472] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,483] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,483] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,487] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,488] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,495] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,497] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,498] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,501] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,501] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,503] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,548] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,559] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,565] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,574] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,582] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,585] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,594] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,595] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,599] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,599] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,608] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,608] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,609] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,611] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,612] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,615] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,660] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,671] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,675] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,684] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,686] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,687] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,694] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,697] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,705] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,706] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,715] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,715] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,720] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,720] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,722] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,722] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,726] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,772] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,782] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,786] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,803] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,804] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,804] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,805] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,808] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,817] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,818] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,823] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,826] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,830] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,832] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,833] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,834] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,835] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,838] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,885] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,893] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,896] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,908] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,915] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,915] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,916] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,920] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,928] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,929] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,932] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,937] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,944] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,953] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,955] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,955] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:31:59,955] INFO [Controller 1] CreateTopics result(s): CreatableTopic(name='topic-0', numPartitions=1, replicationFactor=1, assignments=[], configs=[]): TOPIC_ALREADY_EXISTS (Topic 'topic-0' already exists.) (org.apache.kafka.controller.ReplicationControlManager)
<h1>: [2023-02-26 20:34:57,644] INFO [GroupCoordinator 1]: Preparing to rebalance group group-1 in state PreparingRebalance with old generation 1 (__consumer_offsets-49) (reason: Leader kafka-python-2.0.2-5a4a0cb6-eea7-4ffe-8b60-cd1c29fed214 re-joining group during Stable) (kafka.coordinator.group.GroupCoordinator)
<h1>: [2023-02-26 20:34:57,645] INFO [GroupCoordinator 1]: Stabilized group group-1 generation 2 (__consumer_offsets-49) with 1 members (kafka.coordinator.group.GroupCoordinator)
<h1>: [2023-02-26 20:34:57,647] INFO [GroupCoordinator 1]: Assignment received from leader kafka-python-2.0.2-5a4a0cb6-eea7-4ffe-8b60-cd1c29fed214 for group group-1 for generation 2. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
